---
name: Release
on:
  push:
    tags:
      - "v*"

jobs:

  # Build for Linux
  build-ubuntu:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: 1.21.x
        arch: [x86_64, aarch64]

    steps:
      - name: Build
        uses: actions/setup-go@v3
          with:
            go-version ${{ matrix.go-version }}
        - uses: actions/checkout@v3
        - run: git submodule init && git submodule update
        - run: make && mv tau tau-${{ runner.os }}-${{ runner.arch }}
        - name: Archive artifacts
          uses: actions/upload-artifact@v2
          with:
            name: linux-${{ runner.arch }}
            path: ./tau-${{ runner.os }}-${{ runner.arch }}

  # Build for MacOS
  build-macos:
    runs-on: macos-latest
    strategy:
      fail-fast: false
      matrix:
        go-version: 1.21.x
        arch: [x86_64, aarch64]

    steps:
      - name: Build
        uses: actions/setup-go@v3
        with:
          go-version: ${{ matrix.go-version }}
      - uses: actions/checkout@v3
      - run: git submodule init && git submodule update
      - run: brew install automake
      - run: make && mv tau tau-${{ runner.os }}-${{ runner.arch }}
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-${{ runner.arch }}
          path: ./tau-${{ runner.os }}-${{ runner.arch }}

  # Build for Windows MSYS2
  build-msys2:
    runs-on: windows-latest
    strategy:
      fail-fast: false
        matrix:
          go-version: 1.21.x
          include:
            - MSYSTEM: MINGW64
              MSYS2_ARCH: x86_64

    steps:
      - uses: actions/setup-go@v3
        with:
          go-version ${{ matrix.go-version }}
      - run: git config --global core.autocrlf input
      - uses: actions/checkout@v3
      - uses: msys2/setup-msys2@v2
        with:
          msystem: ${{ matrix.MSYSTEM }}
          update: true
          install: >-
              base-devel
              autoconf-wrapper
              autoconf
              automake
              libtool
              make
              dejagnu
              mingw-w64-${{ matrix.MSYS2_ARCH }}-gcc
              mingw-w64-${{ matrix.MSYS2_ARCH }}-gcc-libs
              unzip
              go

      - run: |
        set -x
        cd $(cygpath $RUNNER_WORKSPACE)/tau/libffi
        wget https://rl.gl/cli/rlgl-windows-amd64.zip
        unzip rlgl-windows-amd64.zip
        autoreconf -f -v -i
        CC=${{ matrix.MSYS2_ARCH }}-w64-mingw32-gcc CXX=${{ matrix.MSYS2_ARCH }}-w64-mingw32-g++ ./configure --prefix=${{ github.workspace }}/internal/obj/libffi --disable-shared --enable-static --disable-multi-os-directory
        make
        TERM=none DEJAGNU=$(pwd)/.ci/site.exp BOARDSDIR=$(pwd)/.ci GCC_COLORS= make check || true
        ./rlgl/rlgl.exe l --key=0LIBFFI-0LIBFFI-0LIBFFI-0LIBFFI https://rl.gl
        ./rlgl/rlgl.exe e \
                        -l project=libffi \
                        -l sha=${GITHUB_SHA:0:7} \
                        -l CC=${{ matrix.MSYS2_ARCH }}-w64-mingw32-gcc \
                        -l host=x86_64-pc-cygwin \
                        --policy=https://github.com/libffi/rlgl-policy.git $(find . -name libffi.log)
        shell: msys2 {0}

      - run: make tau && mv tau tau-${{ runner.os }}-${{ runner.arch }}.exe
      - name: Archive artifacts
        uses: actions/upload-artifact@v2
        with:
          name: macos-${{ runner.arch }}
          path: ./tau-${{ runner.os }}-${{ runner.arch }}.exe
